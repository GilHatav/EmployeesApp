{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gilha\\\\OneDrive\\\\Desktop\\\\EmployeesProject\\\\EmployeesFrontend\\\\src\\\\Employees\\\\EmployeesScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport EmployeeForm from \"./EmployeeForm\";\nimport EmployeesList from \"./EmployeesList\";\nimport NewEmployee from './NewEmployee';\nimport SearchEmployee from './SearchEmployee';\nimport config from \"../config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = config.api;\n\nfunction EmployeesScreen(props) {\n  _s();\n\n  const [employees, setEmployees] = useState([]);\n  const [showForm, setShowForm] = useState(false); //Functions\n\n  useEffect(() => {\n    const getAllEmployees = () => {\n      fetch(API, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        setEmployees(data);\n      }).catch(e => console.error(\"error!\", e));\n    };\n\n    getAllEmployees();\n  }, []);\n\n  const viewForm = () => {\n    setShowForm(prevState => !prevState);\n  };\n\n  const getEmployee = term => {\n    fetch(API + \"/?email=\" + term, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setEmployees([data]);\n    }).catch(e => console.error(\"error!\", e));\n  };\n\n  const getAll = () => {\n    fetch(API, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setEmployees(data);\n    }).catch(e => console.error(\"error!\", e));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showForm ? /*#__PURE__*/_jsxDEV(EmployeeForm, {\n      submitBtnName: \"Add Employee\",\n      viewForm: viewForm,\n      getAll: getAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(NewEmployee, {\n      viewForm: viewForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 110\n    }, this), /*#__PURE__*/_jsxDEV(SearchEmployee, {\n      submitFunc: getEmployee,\n      getAll: getAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EmployeesList, {\n      employees: employees\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EmployeesScreen, \"h9KQUllRswDEbfGNdl7ZNF7XftA=\");\n\n_c = EmployeesScreen;\nexport default EmployeesScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeesScreen\");","map":{"version":3,"names":["useState","useEffect","EmployeeForm","EmployeesList","NewEmployee","SearchEmployee","config","API","api","EmployeesScreen","props","employees","setEmployees","showForm","setShowForm","getAllEmployees","fetch","method","headers","then","response","json","data","catch","e","console","error","viewForm","prevState","getEmployee","term","getAll"],"sources":["C:/Users/gilha/OneDrive/Desktop/EmployeesProject/EmployeesFrontend/src/Employees/EmployeesScreen.js"],"sourcesContent":["import {useState, useEffect} from 'react'\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport EmployeesList from \"./EmployeesList\";\r\nimport NewEmployee from './NewEmployee'\r\nimport SearchEmployee from './SearchEmployee';\r\nimport config from \"../config.js\"\r\n\r\nconst API = config.api;\r\n\r\nfunction EmployeesScreen(props) {\r\n\r\n    const [employees, setEmployees] = useState([]);\r\n    const [showForm, setShowForm] = useState(false);\r\n\r\n  //Functions\r\n  useEffect(() => {\r\n    const getAllEmployees = () => {\r\n      fetch(API, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          setEmployees(data);\r\n        })\r\n        .catch(e=>console.error(\"error!\",e));\r\n    };\r\n    getAllEmployees();\r\n  }, []);\r\n    \r\n    const viewForm = () => {setShowForm((prevState) => !prevState)}\r\n\r\n    const getEmployee = (term) => {\r\n        fetch(API + \"/?email=\" + term, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          })\r\n            .then((response) => {\r\n              return response.json();\r\n            })\r\n            .then((data) => {\r\n              setEmployees([data]);\r\n            }).catch(e=>console.error(\"error!\",e));\r\n    }\r\n    const getAll = () => {\r\n        fetch(API, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        })\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          .then((data) => {\r\n            setEmployees(data);\r\n          }).catch(e=>console.error(\"error!\",e));\r\n      };\r\n      \r\n    return (\r\n        <div>\r\n            {showForm ? <EmployeeForm submitBtnName={\"Add Employee\"}  viewForm={viewForm} getAll={getAll}/>: <NewEmployee viewForm={viewForm}/>}  \r\n            <SearchEmployee submitFunc={getEmployee} getAll={getAll}></SearchEmployee>           \r\n            <EmployeesList employees={employees} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeesScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}