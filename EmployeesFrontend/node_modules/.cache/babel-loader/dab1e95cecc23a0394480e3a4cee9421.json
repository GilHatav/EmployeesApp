{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gilha\\\\OneDrive\\\\Desktop\\\\EmployeesProject\\\\EmployeesFrontend\\\\src\\\\Employees\\\\EmployeesScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport EmployeeForm from \"./EmployeeForm\";\nimport EmployeesList from \"./EmployeesList\";\nimport NewEmployee from './NewEmployee';\nimport SearchEmployee from './SearchEmployee';\nimport config from \"../config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = config.api;\n\nfunction EmployeesScreen(props) {\n  _s();\n\n  const [employees, setEmployees] = useState([]);\n  const [showForm, setShowForm] = useState(false); //Functions\n\n  useEffect(() => {\n    const getAllEmployees = () => {\n      fetch(API, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        setEmployees(data);\n      });\n    };\n\n    getAllEmployees();\n  }, []);\n\n  const viewForm = () => {\n    setShowForm(prevState => !prevState);\n  };\n\n  const getEmployee = term => {\n    console.log(\"here\" + term);\n    fetch(API + \"/?email=\" + term, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(\"here\");\n      console.log(data);\n      setEmployees([data]);\n    });\n  };\n\n  const getAll = () => {\n    fetch(API, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setEmployees(data);\n    });\n  };\n\n  const setSpecific = async emp => {\n    setEmployees(prevState => {\n      prevState.forEach(employee => {\n        if (employee.id === emp.id) {\n          // employee.f_name = emp.f_name;\n          // employee.l_name = emp.l_name;\n          // employee.email = emp.email;\n          employee = { ...emp\n          };\n        }\n      });\n      return [...employees];\n    });\n  };\n\n  const updateEmployee = () => {\n    var emp = {\n      id: props.id,\n      f_name: f_name,\n      l_name: l_name,\n      email: email\n    };\n    fetch(API, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(emp)\n    }).then(() => {\n      // window.location.reload(false);\n      props.setSpecific(emp);\n      props.viewForm();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showForm ? /*#__PURE__*/_jsxDEV(EmployeeForm, {\n      submitBtnName: \"Add Employee\",\n      viewForm: viewForm,\n      getAll: getAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(NewEmployee, {\n      viewForm: viewForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 109\n    }, this), /*#__PURE__*/_jsxDEV(SearchEmployee, {\n      submitFunc: getEmployee,\n      getAll: getAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EmployeesList, {\n      employees: employees,\n      setSpecific: setSpecific\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EmployeesScreen, \"h9KQUllRswDEbfGNdl7ZNF7XftA=\");\n\n_c = EmployeesScreen;\nexport default EmployeesScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeesScreen\");","map":{"version":3,"names":["useState","useEffect","EmployeeForm","EmployeesList","NewEmployee","SearchEmployee","config","API","api","EmployeesScreen","props","employees","setEmployees","showForm","setShowForm","getAllEmployees","fetch","method","headers","then","response","json","data","viewForm","prevState","getEmployee","term","console","log","getAll","setSpecific","emp","forEach","employee","id","updateEmployee","f_name","l_name","email","body","JSON","stringify"],"sources":["C:/Users/gilha/OneDrive/Desktop/EmployeesProject/EmployeesFrontend/src/Employees/EmployeesScreen.js"],"sourcesContent":["import {useState, useEffect} from 'react'\r\nimport EmployeeForm from \"./EmployeeForm\";\r\nimport EmployeesList from \"./EmployeesList\";\r\nimport NewEmployee from './NewEmployee'\r\nimport SearchEmployee from './SearchEmployee';\r\nimport config from \"../config.js\"\r\n\r\nconst API = config.api;\r\n\r\nfunction EmployeesScreen(props) {\r\n\r\n    const [employees, setEmployees] = useState([]);\r\n    const [showForm, setShowForm] = useState(false);\r\n\r\n  //Functions\r\n  useEffect(() => {\r\n    const getAllEmployees = () => {\r\n      fetch(API, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          setEmployees(data);\r\n        });\r\n    };\r\n    getAllEmployees();\r\n  }, []);\r\n    \r\n    const viewForm = () => {setShowForm((prevState) => !prevState)}\r\n    const getEmployee = (term) => {\r\n        console.log(\"here\" + term)\r\n        fetch(API + \"/?email=\" + term, {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          })\r\n            .then((response) => {\r\n              return response.json();\r\n            })\r\n            .then((data) => {\r\n              console.log(\"here\");\r\n              console.log(data);\r\n              setEmployees([data]);\r\n            });\r\n    }\r\n    const getAll = () => {\r\n        fetch(API, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        })\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          .then((data) => {\r\n            setEmployees(data);\r\n          });\r\n      };\r\n      \r\nconst setSpecific = async (emp) => {\r\n        setEmployees((prevState) => {\r\n          prevState.forEach((employee) => {\r\n            if(employee.id === emp.id){\r\n              // employee.f_name = emp.f_name;\r\n              // employee.l_name = emp.l_name;\r\n              // employee.email = emp.email;\r\n              employee = {...emp}\r\n          } \r\n        });\r\n        \r\n        return [...employees]\r\n      });\r\n    }\r\n\r\n    const updateEmployee = () => {\r\n      var emp = {\r\n        id: props.id,\r\n        f_name: f_name, \r\n        l_name: l_name, \r\n        email: email\r\n      }\r\n      fetch(API, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(emp)\r\n      })\r\n        .then(() => {\r\n          // window.location.reload(false);\r\n          props.setSpecific(emp);\r\n          props.viewForm();\r\n        })\r\n        \r\n  }\r\n\r\n    return (\r\n        <div>\r\n            {showForm ? <EmployeeForm submitBtnName={\"Add Employee\"} viewForm={viewForm} getAll={getAll}/>: <NewEmployee viewForm={viewForm}/>}  \r\n            <SearchEmployee submitFunc={getEmployee} getAll={getAll}></SearchEmployee>           \r\n            <EmployeesList employees = {employees} setSpecific={setSpecific}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmployeesScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}